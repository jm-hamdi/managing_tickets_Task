{"ast":null,"code":"var _jsxFileName = \"/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/AddTaskModal.tsx\",\n  _s = $RefreshSig$();\n// src/Components/AddTaskModal.tsx\nimport React, { useState, useEffect } from 'react';\n// Import the Task type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskModal = ({\n  isVisible,\n  onClose,\n  onAdd,\n  task\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState({\n    Description: '',\n    Status: '',\n    Date: ''\n  });\n  useEffect(() => {\n    if (task) {\n      setNewTask({\n        Description: task.Description || '',\n        Status: task.Status || '',\n        Date: task.Date || ''\n      });\n    } else {\n      setNewTask({\n        Description: '',\n        Status: '',\n        Date: ''\n      });\n    }\n  }, [task]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddOrUpdateTask = e => {\n    e.preventDefault();\n    if (newTask.Description && newTask.Status && newTask.Date) {\n      onAdd({\n        Description: newTask.Description,\n        Status: newTask.Status,\n        Date: newTask.Date\n      });\n      setNewTask({\n        Description: '',\n        Status: '',\n        Date: ''\n      });\n    }\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task ? 'Update Task' : 'Add New Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddOrUpdateTask,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          placeholder: \"Task Description\",\n          value: newTask.Description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Status\",\n          placeholder: \"Task Status\",\n          value: newTask.Status,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Date\",\n          placeholder: \"Date\",\n          value: newTask.Date,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: task ? 'Update Task' : 'Add New'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskModal, \"UOdbwIiQ1/hRnYzijpmEH1YVcB0=\");\n_c = AddTaskModal;\nexport default AddTaskModal;\nvar _c;\n$RefreshReg$(_c, \"AddTaskModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AddTaskModal","isVisible","onClose","onAdd","task","_s","newTask","setNewTask","Description","Status","Date","handleChange","e","name","value","target","prevTask","handleAddOrUpdateTask","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/AddTaskModal.tsx"],"sourcesContent":["// src/Components/AddTaskModal.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Task } from '../types'; // Import the Task type\n\ninterface AddTaskModalProps {\n    isVisible: boolean;\n    onClose: () => void;\n    onAdd: (task: Task) => void;\n    task?: Task | null; // Optional prop for updating a task\n}\n\nconst AddTaskModal: React.FC<AddTaskModalProps> = ({ isVisible, onClose, onAdd, task }) => {\n    const [newTask, setNewTask] = useState<Task>({\n        Description: '',\n        Status: '',\n        Date: '',\n    });\n\n    useEffect(() => {\n        if (task) {\n            setNewTask({\n                Description: task.Description || '',\n                Status: task.Status || '',\n                Date: task.Date || '',\n            });\n        } else {\n            setNewTask({ Description: '', Status: '', Date: '' });\n        }\n    }, [task]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setNewTask(prevTask => ({ ...prevTask, [name]: value }));\n    };\n\n    const handleAddOrUpdateTask = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (newTask.Description && newTask.Status && newTask.Date) {\n            onAdd({\n                Description: newTask.Description,\n                Status: newTask.Status,\n                Date: newTask.Date,\n            });\n            setNewTask({ Description: '', Status: '', Date: '' });\n        }\n    };\n\n    if (!isVisible) return null;\n\n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-content\">\n                <h3>{task ? 'Update Task' : 'Add New Task'}</h3>\n                <form onSubmit={handleAddOrUpdateTask}>\n                    <input\n                        type=\"text\"\n                        name=\"Description\"\n                        placeholder=\"Task Description\"\n                        value={newTask.Description}\n                        onChange={handleChange}\n                        required\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"Status\"\n                        placeholder=\"Task Status\"\n                        value={newTask.Status}\n                        onChange={handleChange}\n                        required\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"Date\"\n                        placeholder=\"Date\"\n                        value={newTask.Date}\n                        onChange={handleChange}\n                        required\n                    />\n                    <button type=\"submit\">{task ? 'Update Task' : 'Add New'}</button>\n                    <button type=\"button\" onClick={onClose}>Cancel</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddTaskModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}