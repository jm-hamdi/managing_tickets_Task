{"ast":null,"code":"var _jsxFileName = \"/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/TableComponent.tsx\",\n  _s = $RefreshSig$();\n// src/Components/TableComponent.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Style/TableComponent.css'; // Import your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Import the Task type\n\nconst TableComponent = () => {\n  _s();\n  const [data, setData] = useState([{\n    id: 1,\n    Description: 'Promotion code issued',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 2,\n    Description: 'Additional user account',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 3,\n    Description: 'Change payment method',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 4,\n    Description: 'Activate account',\n    Status: 'Closed',\n    Date: 'May-29-2022'\n  }, {\n    id: 5,\n    Description: 'Great job',\n    Status: 'Closed',\n    Date: 'May-29-2022'\n  }]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editTask, setEditTask] = useState(null);\n  const [newTask, setNewTask] = useState({\n    Description: '',\n    Status: '',\n    Date: '',\n    id: undefined // Optional ID for tasks being updated\n  });\n  useEffect(() => {\n    if (editTask) {\n      setNewTask({\n        Description: editTask.Description,\n        Status: editTask.Status,\n        Date: editTask.Date,\n        id: editTask.id\n      });\n    } else {\n      setNewTask({\n        Description: '',\n        Status: '',\n        Date: '',\n        id: undefined\n      });\n    }\n  }, [editTask]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddOrUpdateTask = e => {\n    e.preventDefault();\n    if (newTask.Description && newTask.Status && newTask.Date) {\n      if (editTask) {\n        setData(prev => prev.map(task => task.id === editTask.id ? {\n          ...task,\n          ...newTask\n        } : task));\n      } else {\n        setData(prev => [...prev, {\n          id: prev.length + 1,\n          // Simple ID generation\n          ...newTask\n        }]);\n      }\n      setIsModalVisible(false); // Close the modal\n      setEditTask(null); // Reset edit task\n      setNewTask({\n        Description: '',\n        Status: '',\n        Date: '',\n        id: undefined\n      }); // Reset form\n    } else {\n      alert(\"Please fill out all fields.\"); // Simple validation\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ticket id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: e => {\n                e.preventDefault();\n                setEditTask(item);\n                setIsModalVisible(true);\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), \" | \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: e => {\n                e.preventDefault();\n                setData(prev => prev.filter(task => task.id !== item.id));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalVisible(true),\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editTask ? 'Update Task' : 'Add New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrUpdateTask,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Description\",\n            placeholder: \"Task Description\",\n            value: newTask.Description,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Status\",\n            placeholder: \"Task Status\",\n            value: newTask.Status,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Date\",\n            placeholder: \"Date\",\n            value: newTask.Date,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: editTask ? 'Update Task' : 'Add New'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setIsModalVisible(false);\n              setEditTask(null);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(TableComponent, \"oU1NwU8T9E4Il+OkZUbCGzrqhVk=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TableComponent","_s","data","setData","id","Description","Status","Date","isModalVisible","setIsModalVisible","editTask","setEditTask","newTask","setNewTask","undefined","handleChange","e","name","value","target","prevTask","handleAddOrUpdateTask","preventDefault","prev","map","task","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","item","href","onClick","filter","className","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/TableComponent.tsx"],"sourcesContent":["// src/Components/TableComponent.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Style/TableComponent.css'; // Import your styles\nimport { Task } from '../types'; // Import the Task type\n\nconst TableComponent: React.FC = () => {\n    const [data, setData] = useState<Task[]>([\n        { id: 1, Description: 'Promotion code issued', Status: 'Open', Date: 'May-29-2022' },\n        { id: 2, Description: 'Additional user account', Status: 'Open', Date: 'May-29-2022' },\n        { id: 3, Description: 'Change payment method', Status: 'Open', Date: 'May-29-2022' },\n        { id: 4, Description: 'Activate account', Status: 'Closed', Date: 'May-29-2022' },\n        { id: 5, Description: 'Great job', Status: 'Closed', Date: 'May-29-2022' },\n    ]);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editTask, setEditTask] = useState<Task | null>(null);\n    const [newTask, setNewTask] = useState<Task>({\n        Description: '',\n        Status: '',\n        Date: '',\n        id: undefined, // Optional ID for tasks being updated\n    });\n\n    useEffect(() => {\n        if (editTask) {\n            setNewTask({\n                Description: editTask.Description,\n                Status: editTask.Status,\n                Date: editTask.Date,\n                id: editTask.id,\n            });\n        } else {\n            setNewTask({ Description: '', Status: '', Date: '', id: undefined });\n        }\n    }, [editTask]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setNewTask((prevTask: any) => ({ ...prevTask, [name]: value }));\n    };\n\n    const handleAddOrUpdateTask = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (newTask.Description && newTask.Status && newTask.Date) {\n            if (editTask) {\n                setData(prev =>\n                    prev.map(task => (task.id === editTask.id ? { ...task, ...newTask } : task))\n                );\n            } else {\n                setData(prev => [\n                    ...prev,\n                    {\n                        id: prev.length + 1, // Simple ID generation\n                        ...newTask,\n                    },\n                ]);\n            }\n            setIsModalVisible(false); // Close the modal\n            setEditTask(null); // Reset edit task\n            setNewTask({ Description: '', Status: '', Date: '', id: undefined }); // Reset form\n        } else {\n            alert(\"Please fill out all fields.\"); // Simple validation\n        }\n    };\n\n    return (\n        <div>\n            <h3>Task List</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Ticket id</th>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Date</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map(item => (\n                        <tr key={item.id}>\n                            <td>{item.id}</td>\n                            <td>{item.Description}</td>\n                            <td>{item.Status}</td>\n                            <td>{item.Date}</td>\n                            <td>\n                                <a href=\"#\" onClick={(e) => { e.preventDefault(); setEditTask(item); setIsModalVisible(true); }}>Update</a>\n                                {\" | \"}\n                                <a href=\"#\" onClick={(e) => { e.preventDefault(); setData(prev => prev.filter(task => task.id !== item.id)); }}>Delete</a>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <div className=\"add-task\">\n                <button onClick={() => setIsModalVisible(true)}>\n                    Add New\n                </button>\n            </div>\n\n            {isModalVisible && (\n                <div className=\"modal-overlay\">\n                    <div className=\"modal-content\">\n                        <h3>{editTask ? 'Update Task' : 'Add New Task'}</h3>\n                        <form onSubmit={handleAddOrUpdateTask}>\n                            <input\n                                type=\"text\"\n                                name=\"Description\"\n                                placeholder=\"Task Description\"\n                                value={newTask.Description}\n                                onChange={handleChange}\n                                required\n                            />\n                            <input\n                                type=\"text\"\n                                name=\"Status\"\n                                placeholder=\"Task Status\"\n                                value={newTask.Status}\n                                onChange={handleChange}\n                                required\n                            />\n                            <input\n                                type=\"text\"\n                                name=\"Date\"\n                                placeholder=\"Date\"\n                                value={newTask.Date}\n                                onChange={handleChange}\n                                required\n                            />\n                            <button type=\"submit\">{editTask ? 'Update Task' : 'Add New'}</button>\n                            <button type=\"button\" onClick={() => { setIsModalVisible(false); setEditTask(null); }}>Cancel</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TableComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}