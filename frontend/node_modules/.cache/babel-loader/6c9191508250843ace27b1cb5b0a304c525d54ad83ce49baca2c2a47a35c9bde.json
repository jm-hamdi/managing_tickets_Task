{"ast":null,"code":"var _jsxFileName = \"/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/TableComponent.tsx\",\n  _s = $RefreshSig$();\n// src/Components/TableComponent.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Style/TableComponent.css'; // Import your styles\n\n// Import the Task type\nimport AddTaskModal from './AddTaskModal'; // Import the AddTaskModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = () => {\n  _s();\n  const [data, setData] = useState([{\n    id: 1,\n    Description: 'Promotion code issued',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 2,\n    Description: 'Additional user account',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 3,\n    Description: 'Change payment method',\n    Status: 'Open',\n    Date: 'May-29-2022'\n  }, {\n    id: 4,\n    Description: 'Activate account',\n    Status: 'Closed',\n    Date: 'May-29-2022'\n  }, {\n    id: 5,\n    Description: 'Great job',\n    Status: 'Closed',\n    Date: 'May-29-2022'\n  }]);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editTask, setEditTask] = useState(null);\n  const [newTask, setNewTask] = useState({\n    Description: '',\n    Status: '',\n    Date: '',\n    id: undefined // Optional ID for tasks being updated\n  });\n  useEffect(() => {\n    if (editTask) {\n      setNewTask({\n        Description: editTask.Description,\n        Status: editTask.Status,\n        Date: editTask.Date,\n        id: editTask.id\n      });\n    } else {\n      setNewTask({\n        Description: '',\n        Status: '',\n        Date: '',\n        id: undefined\n      });\n    }\n  }, [editTask]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleAddOrUpdateTask = newTask => {\n    if (editTask) {\n      // Update existing task\n      setData(prev => prev.map(task => task.id === editTask.id ? {\n        ...task,\n        ...newTask\n      } : task));\n      setEditTask(null); // Reset after updating\n    } else {\n      // Add new task\n      setData(prev => [...prev, {\n        id: prev.length + 1,\n        // Simple ID generation\n        ...newTask\n      }]);\n    }\n    setIsModalVisible(false); // Close modal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ticket id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: e => {\n                e.preventDefault();\n                setEditTask(item);\n                setIsModalVisible(true);\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), \" | \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: e => {\n                e.preventDefault();\n                setData(prev => prev.filter(task => task.id !== item.id));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalVisible(true),\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      isVisible: isModalVisible,\n      onClose: () => {\n        setIsModalVisible(false);\n        setEditTask(null); // Reset edit task when modal is closed\n      },\n      onAdd: handleAddOrUpdateTask,\n      task: editTask // Pass the task to the modal for editing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(TableComponent, \"oU1NwU8T9E4Il+OkZUbCGzrqhVk=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskModal","jsxDEV","_jsxDEV","TableComponent","_s","data","setData","id","Description","Status","Date","isModalVisible","setIsModalVisible","editTask","setEditTask","newTask","setNewTask","undefined","handleChange","e","name","value","target","prevTask","handleAddOrUpdateTask","prev","map","task","length","children","fileName","_jsxFileName","lineNumber","columnNumber","item","href","onClick","preventDefault","filter","className","isVisible","onClose","onAdd","_c","$RefreshReg$"],"sources":["/Users/JM/Desktop/Task_Fullstack_Developer_dotNET/frontend/src/Components/TableComponent.tsx"],"sourcesContent":["// src/Components/TableComponent.tsx\nimport React, { useState, useEffect } from 'react';\nimport '../Style/TableComponent.css'; // Import your styles\nimport { Task } from '../types'; // Import the Task type\nimport AddTaskModal from './AddTaskModal'; // Import the AddTaskModal component\n\nconst TableComponent: React.FC = () => {\n    const [data, setData] = useState<Task[]>([\n        { id: 1, Description: 'Promotion code issued', Status: 'Open', Date: 'May-29-2022' },\n        { id: 2, Description: 'Additional user account', Status: 'Open', Date: 'May-29-2022' },\n        { id: 3, Description: 'Change payment method', Status: 'Open', Date: 'May-29-2022' },\n        { id: 4, Description: 'Activate account', Status: 'Closed', Date: 'May-29-2022' },\n        { id: 5, Description: 'Great job', Status: 'Closed', Date: 'May-29-2022' },\n    ]);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editTask, setEditTask] = useState<Task | null>(null);\n    const [newTask, setNewTask] = useState<Task>({\n        Description: '',\n        Status: '',\n        Date: '',\n        id: undefined, // Optional ID for tasks being updated\n    });\n\n    useEffect(() => {\n        if (editTask) {\n            setNewTask({\n                Description: editTask.Description,\n                Status: editTask.Status,\n                Date: editTask.Date,\n                id: editTask.id,\n            });\n        } else {\n            setNewTask({ Description: '', Status: '', Date: '', id: undefined });\n        }\n    }, [editTask]);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setNewTask((prevTask: any) => ({ ...prevTask, [name]: value }));\n    };\n\n    const handleAddOrUpdateTask = (newTask) =>\n        {\n            if (editTask)\n            {\n                // Update existing task\n                setData((prev) =>\n                    prev.map((task) => (task.id === editTask.id ? { ...task, ...newTask } : task))\n                );\n                setEditTask(null); // Reset after updating\n            } else\n            {\n                // Add new task\n                setData((prev) => [\n                    ...prev,\n                    {\n                        id: prev.length + 1, // Simple ID generation\n                        ...newTask,\n                    },\n                ]);\n            }\n            setIsModalVisible(false); // Close modal\n        };\n\n    return (\n        <div>\n            <h3>Task List</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Ticket id</th>\n                        <th>Description</th>\n                        <th>Status</th>\n                        <th>Date</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map(item => (\n                        <tr key={item.id}>\n                            <td>{item.id}</td>\n                            <td>{item.Description}</td>\n                            <td>{item.Status}</td>\n                            <td>{item.Date}</td>\n                            <td>\n                                <a href=\"#\" onClick={(e) => { e.preventDefault(); setEditTask(item); setIsModalVisible(true); }}>Update</a>\n                                {\" | \"}\n                                <a href=\"#\" onClick={(e) => { e.preventDefault(); setData(prev => prev.filter(task => task.id !== item.id)); }}>Delete</a>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <div className=\"add-task\">\n                <button onClick={() => setIsModalVisible(true)}>\n                    Add New\n                </button>\n            </div>\n\n            <AddTaskModal\n                isVisible={isModalVisible}\n                onClose={() =>\n                {\n                    setIsModalVisible(false);\n                    setEditTask(null); // Reset edit task when modal is closed\n                }}\n                onAdd={handleAddOrUpdateTask}\n                task={editTask} // Pass the task to the modal for editing\n            />\n        </div>\n    );\n};\n\nexport default TableComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}